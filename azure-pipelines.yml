# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  name: UbuntuToken 
  vmImage: 'aws-linux'

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
  -  task: Bash@3
     inputs:
      targetType: 'inline'
        script: |
          #!/bin/bash
          #
          # Test the JMeter Docker image using a trivial test plan.
          
          # Example for using User Defined Variables with JMeter
          # These will be substituted in JMX test script
          # See also: http://stackoverflow.com/questions/14317715/jmeter-changing-user-defined-variables-from-command-line
          export TARGET_HOST="www.map5.nl"
          export TARGET_PORT="80"
          export TARGET_PATH="/kaarten.html"
          export TARGET_KEYWORD="Kaartdiensten"
          
          T_DIR=tests/trivial
          
          # Reporting dir: start fresh
          R_DIR=${T_DIR}/report
          rm -rf ${R_DIR} > /dev/null 2>&1
          mkdir -p ${R_DIR}
          
          /bin/rm -f ${T_DIR}/test-plan.jtl ${T_DIR}/jmeter.log  > /dev/null 2>&1
          
          ./run.sh -Dlog_level.jmeter=DEBUG \
                  -n -t ${T_DIR}/test-plan2.jmx -l ${T_DIR}/test-plan2.jtl -j ${T_DIR}/jmeter2.log \
                  -e -o ${R_DIR}
          
          echo "==== jmeter.log ===="
          cat ${T_DIR}/jmeter2.log
          
          echo "==== Raw Test Report ===="
          cat ${T_DIR}/test-plan2.jtl
          
          echo "==== HTML Test Report ===="
          echo "See HTML test report in ${R_DIR}/index.html"
